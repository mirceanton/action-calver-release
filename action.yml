---
name: CalVer Release Action
description: Creates a new release using Calendar Versioning (CalVer) with format `YYYY.MM.PATCH`
author: Mircea-Pavel Anton

inputs:
  dry-run:
    description: "Perform a dry run without creating an actual release"
    required: false
    default: "false"
  draft:
    description: "Create the release as a draft (unpublished)."
    required: false
    default: "false"
  github-token:
    description: "GitHub token with repository access"
    required: true

outputs:
  release-tag:
    description: "The generated release tag (e.g., 2025.4.0)"
    value: ${{ steps.calculate-version.outputs.release_tag }}
  previous-tag:
    description: "The previous release tag that was used as reference"
    value: ${{ steps.get-previous-tag.outputs.previous_tag }}
  release-url:
    description: "URL to the created GitHub release"
    value: ${{ steps.create-release.outputs.release_url || '' }}

runs:
  using: "composite"
  steps:
    - name: Initialize Summary
      shell: bash
      run: |
        echo "# 📅 CalVer Release Process" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📋 Release Information" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

    - name: Get Previous Tag
      id: get-previous-tag
      shell: bash
      env:
        GH_TOKEN: "${{ inputs.github-token }}"
      run: |
        previous_tag="$(gh release list --limit 1 | awk '{ print $1 }')"
        if [ -z "$previous_tag" ]; then
          echo "ℹ️ **No previous releases found.** This will be the first release." >> $GITHUB_STEP_SUMMARY
          previous_tag="0.0.0"
        else
          echo "🏷️ **Previous release tag:** \`${previous_tag}\`" >> $GITHUB_STEP_SUMMARY
        fi
        echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_STEP_SUMMARY

    - name: Calculate New Version
      id: calculate-version
      shell: bash
      run: |
        # Get previous tag value from previous step
        previous_tag="${{ steps.get-previous-tag.outputs.previous_tag }}"

        # Get current YYYY.MM
        next_year_month="$(date +'%Y').$(date +'%-m')"

        # Extract year, month and patch from previous tag
        previous_year="${previous_tag%%\.*}"
        previous_month="${previous_tag#*.}"
        previous_month="${previous_month%.*}"
        previous_patch="${previous_tag##*.}"

        echo "### Version Components" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Previous Value | New Value |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|----------------|-----------|" >> $GITHUB_STEP_SUMMARY
        echo "| Year      | ${previous_year} | $(date +'%Y') |" >> $GITHUB_STEP_SUMMARY
        echo "| Month     | ${previous_month} | $(date +'%-m') |" >> $GITHUB_STEP_SUMMARY

        if [[ "${previous_year}.${previous_month}" == "${next_year_month}" ]]; then
            next_patch="$((previous_patch + 1))"
            echo "| Patch     | ${previous_patch} | ${next_patch} ⬆️ |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ Month release already exists for this year → **incrementing patch number by 1**" >> $GITHUB_STEP_SUMMARY
        else
            next_patch="0"
            echo "| Patch     | ${previous_patch} | ${next_patch} 🔄 |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ First release for this month → **resetting patch number to 0**" >> $GITHUB_STEP_SUMMARY
        fi

        release_tag="${next_year_month}.${next_patch}"
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🚀 **New release tag:** \`${release_tag}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

    - name: Dry Run Summary
      if: inputs.dry-run == 'true'
      shell: bash
      env:
        RELEASE_TAG: "${{ steps.calculate-version.outputs.release_tag }}"
      run: |
        echo "## 🔍 Dry Run Mode" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⚠️ **This was a dry run. No release was created.**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "If this was a real run, version \`${{ env.RELEASE_TAG }}\` would have been created." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "To create an actual release, run with \`dry-run\` set to \`false\`." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Dry run completed successfully**" >> $GITHUB_STEP_SUMMARY

    - name: Create Release
      id: create-release
      if: inputs.dry-run != 'true'
      shell: bash
      env:
        RELEASE_TAG: "${{ steps.calculate-version.outputs.release_tag }}"
        GH_TOKEN: "${{ inputs.github-token }}"
        DRY_RUN: "${{ inputs.dry-run }}"
      run: |
        echo "## 🔄 Release Process" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⏳ Creating release..." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        gh release create \"$RELEASE_TAG\" \
          --title=\"$RELEASE_TAG\" \
          --repo=${GITHUB_REPOSITORY} \
          --draft=${{ inputs.draft }} \
          --generate-notes

        release_url="https://github.com/$GITHUB_REPOSITORY/releases/tag/$RELEASE_TAG"
        echo "✅ **Release created successfully!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📎 **Release URL:** [${release_url}](${release_url})" >> $GITHUB_STEP_SUMMARY
        echo "release_url=$release_url" >> $GITHUB_OUTPUT

    - name: Summarize Outputs
      shell: bash
      env:
        RELEASE_TAG: "${{ steps.calculate-version.outputs.release_tag }}"
        PREVIOUS_TAG: "${{ steps.get-previous-tag.outputs.previous_tag }}"
        RELEASE_URL: "${{ steps.create-release.outputs.release_url }}"
        DRY_RUN: "${{ inputs.dry-run }}"
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📤 Action Outputs" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Output | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| release-tag | \`$RELEASE_TAG\` |" >> $GITHUB_STEP_SUMMARY
        echo "| previous-tag | \`$PREVIOUS_TAG\` |" >> $GITHUB_STEP_SUMMARY
        if [[ "${DRY_RUN}" != "true" ]]; then
          echo "| release-url | [$RELEASE_URL]($RELEASE_URL) |" >> $GITHUB_STEP_SUMMARY
        fi
