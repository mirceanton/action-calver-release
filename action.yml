---
name: 'CalVer Release Action'
description: 'Creates a new release using Calendar Versioning (CalVer) with format YYYY.MM.PATCH'
author: 'Mircea-Pavel Anton'

inputs:
  dry-run:
    description: 'Perform a dry run without creating an actual release'
    required: false
    default: 'false'
  github-token:
    description: 'GitHub token with repository access'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Create Release
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        DRY_RUN: ${{ inputs.dry-run }}
      run: |
        # Retrieve previous release tag
        previous_tag="$(gh release list --limit 1 | awk '{ print $1 }')"

        # Extract major, minor and patch from tag
        previous_major="${previous_tag%%\.*}"
        previous_minor="${previous_tag#*.}"
        previous_minor="${previous_minor%.*}"
        previous_patch="${previous_tag##*.}"

        # Determine next release tag
        next_major_minor="$(date +'%Y').$(date +'%-m')"
        if [[ "${previous_major}.${previous_minor}" == "${next_major_minor}" ]]; then
            echo "Month release already exists for year, incrementing patch number by 1"
            next_patch="$((previous_patch + 1))"
        else
            echo "Month release does not exist for year, setting patch number to 0"
            next_patch="0"
        fi
        release_tag="${next_major_minor}.${next_patch}"

        # Create release
        if [[ "${DRY_RUN}" == "true" ]]; then
            echo "Dry run: gh release create ${release_tag} --repo=${GITHUB_REPOSITORY} --title=${release_tag} --generate-notes"
        else
            gh release create "${release_tag}" \
                --repo="${GITHUB_REPOSITORY}" \
                --title="${release_tag}" \
                --generate-notes
        fi
