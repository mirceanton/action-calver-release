---
name: CalVer Release Action
description: Creates a new release using Calendar Versioning (CalVer) with format `YYYY.MM.PATCH`
author: Mircea-Pavel Anton

inputs:
  dry-run:
    description: "Perform a dry run without creating an actual release"
    required: false
    default: "false"
  github-token:
    description: "GitHub token with repository access"
    required: true

outputs:
  release-tag:
    description: "The generated release tag (e.g., 2025.4.0)"
    value: ${{ steps.create-release.outputs.release_tag }}
  previous-tag:
    description: "The previous release tag that was used as reference"
    value: ${{ steps.create-release.outputs.previous_tag }}
  release-url:
    description: "URL to the created GitHub release"
    value: ${{ steps.create-release.outputs.release_url }}

runs:
  using: "composite"
  steps:
    - name: Create Release
      id: create-release
      shell: bash
      env:
        GH_TOKEN: "${{ inputs.github-token }}"
        DRY_RUN: "${{ inputs.dry-run }}"
      run: |
        echo "# CalVer Release Process" >> $GITHUB_STEP_SUMMARY

        # =========================================================================================
        # Retrieve previous release tag
        # =========================================================================================
        previous_tag="$(gh release list --limit 1 | awk '{ print $1 }')"
        if [ -z "$previous_tag" ]; then
          echo "No previous releases found. This will be the first release." >> $GITHUB_STEP_SUMMARY
          previous_tag="0.0.0"
        fi
        echo "previous_tag=$previous_tag" >> $GITHUB_STATE
        echo "Previous release tag: `$previous_tag`" >> $GITHUB_STEP_SUMMARY

        # =========================================================================================
        # Determine next release tag
        # =========================================================================================
        # Get current YYYY.MM
        next_year_month="$(date +'%Y').$(date +'%-m')"

        # Extract year, month and patch from previous tag
        previous_year="${previous_tag%%\.*}"
        previous_month="${previous_tag#*.}"
        previous_month="${previous_month%.*}"
        previous_patch="${previous_tag##*.}"

        if [[ "${previous_year}.${previous_month}" == "${next_year_month}" ]]; then
            echo "Month release already exists for year => incrementing patch number by 1" >> $GITHUB_STEP_SUMMARY
            next_patch="$((previous_patch + 1))"
        else
            echo "Month release does not exist for year => setting patch number to 0" >> $GITHUB_STEP_SUMMARY
            next_patch="0"
        fi

        release_tag="${next_year_month}.${next_patch}"
        echo "release_tag=$release_tag" >> $GITHUB_STATE
        echo "New release tag: `$release_tag`\n" >> $GITHUB_STEP_SUMMARY

        # =========================================================================================
        # Create release
        # =========================================================================================
        release_cmd="gh release create \"$release_tag\" --repo=\"${GITHUB_REPOSITORY}\" --title=\"$release_title\" --generate-notes"
        if [[ "${DRY_RUN}" == "true" ]]; then
            echo "Runnging in dry-run mode! This will **not** actually create a new release!" >> $GITHUB_STEP_SUMMARY
            echo "The command that *would have* run is: " >> $GITHUB_STEP_SUMMARY
            echo "```bash" >> $GITHUB_STEP_SUMMARY
            echo "$release_cmd" >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            echo "✅ Dry run completed successfully" >> $GITHUB_STEP_SUMMARY

            echo "release_url=''" >> $GITHUB_STATE
        else
            echo "Creating release..." >> $GITHUB_STEP_SUMMARY

            if release_output=$(eval "$release_cmd" 2>&1); then
              release_url="https://github.com/$GITHUB_REPOSITORY/releases/tag/$release_tag"
              echo "✅ Release created successfully at: [$release_url]($release_url)" >> $GITHUB_STEP_SUMMARY

              echo "release_url=$release_url" >> $GITHUB_STATE
            else
              echo "❌ Release creation failed with error:" >> $GITHUB_STEP_SUMMARY
              echo "```" >> $GITHUB_STEP_SUMMARY
              echo "$release_output" >> $GITHUB_STEP_SUMMARY
              echo "```" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
        fi

        echo "## Action Outputs" >> $GITHUB_STEP_SUMMARY
        echo "| Output | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| release-tag | $release_tag |" >> $GITHUB_STEP_SUMMARY
        echo "| previous-tag | $previous_tag |" >> $GITHUB_STEP_SUMMARY
        if [[ "${DRY_RUN}" != "true" ]]; then
          echo "| release-url | $release_url |" >> $GITHUB_STEP_SUMMARY
        fi
